{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Before you start using Canvas SDK in your project, you have to install it and prepare authorization steps."}]},{"anchor":"Installation","level":3,"type":"heading","text":"Installation"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To clone the repository use these commands. You must also have git lfs installed on your computer. Please check "},{"type":"reference","isActive":true,"identifier":"https:\/\/git-lfs.github.com"},{"type":"text","text":" to get to know what’s git lfs and how to install it."}]},{"type":"codeListing","syntax":"shell","code":["git clone REPO_URL","git lfs pull"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Please contact our support team to get the repository url."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"After you have cloned the repository you can import CanvasSDK.xcframework into your Xcode project or worksapce. If you prefer to use this framework with Swift Package, you can embed it as a binary dependency."}]},{"type":"codeListing","syntax":"swift","code":[".binaryTarget(","    name: \"CanvasSDK\",","    path: \"PATH_TO_CanvasSDK.xcframework\"",")"]},{"anchor":"Authorization","level":3,"type":"heading","text":"Authorization"},{"type":"paragraph","inlineContent":[{"type":"text","text":"There are 3 steps to integrate SDK authorization into your application:"}]},{"anchor":"Set-partner-id-and-application-id-that-you-received-from-our-support-team","level":4,"type":"heading","text":"Set partner-id and application id that you received from our support team."},{"type":"codeListing","syntax":"swift","code":["import CanvasSDK","...","func application(","    _ application: UIApplication,","    didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey : Any]? = nil",") -> Bool {","    ...","    Canvas.shared.register(partnerId: \"__YOUR_PARTNER_ID_UUID_STRING__\", appId: \"__YOUR_APP_ID__\")","    ...","}","..."]},{"anchor":"Set-user-id-property-that-will-be-associated-with-your-in-app-user","level":4,"type":"heading","text":"Set user-id property that will be associated with your in-app user."},{"type":"paragraph","inlineContent":[{"type":"text","text":"User-id property is a string 4-250 characters in length."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"When you get user-id, set it by calling:"}]},{"type":"codeListing","syntax":"swift","code":["import CanvasSDK","...","Canvas.shared.setUserIdProperty(\"__USER_ID_STRING__\")"]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If you do not set user-id, SDK will not be initialized and will not perform operations."}]}],"type":"aside","name":"Note"},{"anchor":"Setup-callback-that-will-sign-each-SDK-network-request","level":4,"type":"heading","text":"Setup callback that will sign each SDK network request."},{"type":"codeListing","syntax":"swift","code":["import CanvasSDK","...","func application(","    _ application: UIApplication,","    didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey : Any]? = nil",") -> Bool {","    ...","    Canvas.shared.register(partnerId: \"__YOUR_PARTNER_ID_UUID_STRING__\", appId: \"__YOUR_APP_ID__\")","    ...","","    \/\/ data: bytes, that should be signed","    \/\/ algo: currently supports only ED25519","    \/\/ completion - error or success Result block. On success it should return CanvasSignature object","    Canvas.shared.setSigningMiddleware { data, algo, completion in","        \/\/ set up sample ED25519 signer with JWK key (converted from string to bytes).","        guard let signer = try SampleAppRequestSigner(with: Data(jwkKey.utf8)) else {","            completion(.failure(Canvas.Error.externalRequestSigningError))","            return","        }","","        do {","            let signature = try signer.sign(body: data, signingAlgo: algo)","            completion(.success(signature))","        } catch {","            completion(.failure(error))","        }","    }","...","}"]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"After these 3 steps are executed, the SDK will be initialized automatically."}]}],"type":"aside","name":"Note"},{"anchor":"SDK-signing-procedure-notes","level":4,"type":"heading","text":"SDK signing procedure notes"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You should use ED25519 assymetric cryptography for signing the SDK. Alongside with partner-id string you should receive a ED25519 private key in JWK format. Example JWK key"}]},{"type":"codeListing","syntax":"json","code":["{","    \"kty\":\"OKP\",","    \"d\":\"_ED25519_PRIVATE_KEY_\",","    \"use\":\"sig\",","    \"crv\":\"Ed25519\",","    \"kid\":\"a35c8f25-f922-4079-a439-45d206de20a7\",","    \"x\":\"dAc1x-k__pLBy0-WcRAeJ_kBA3osqZkIl5H36lVnVfo\"","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can find an example signer in the SampleApp project. The class name is “SampleAppRequestSigner”."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For security reasons, the signing procedure should be moved to the partner’s backend, because keys should not be embedded into client application."},{"type":"text","text":" "},{"type":"text","text":"For tests purposes you can use sample signer “SampleAppRequestSigner” from the SamlpeApp project."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/canvassdk\/gettingstarted"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.occipital.CanvasSDK\/documentation\/CanvasSDK\/GettingStarted","interfaceLanguage":"swift"},"topicSections":[{"title":"Authorization","identifiers":["doc:\/\/com.occipital.CanvasSDK\/documentation\/CanvasSDK\/CanvasSigningHandler","doc:\/\/com.occipital.CanvasSDK\/documentation\/CanvasSDK\/CanvasSigningAlgo"]}],"kind":"article","metadata":{"modules":[{"name":"CanvasSDK"}],"role":"collectionGroup","title":"Getting Started with Canvas SDK"},"hierarchy":{"paths":[["doc:\/\/com.occipital.CanvasSDK\/documentation\/CanvasSDK"]]},"seeAlsoSections":[{"title":"Essentials","identifiers":["doc:\/\/com.occipital.CanvasSDK\/documentation\/CanvasSDK\/Canvas"],"generated":true}],"references":{"doc://com.occipital.CanvasSDK/documentation/CanvasSDK/Canvas/shared":{"role":"symbol","title":"shared","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"shared"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Canvas","preciseIdentifier":"s:9CanvasSDK0A0C"}],"abstract":[],"identifier":"doc:\/\/com.occipital.CanvasSDK\/documentation\/CanvasSDK\/Canvas\/shared","kind":"symbol","type":"topic","url":"\/documentation\/canvassdk\/canvas\/shared"},"doc://com.occipital.CanvasSDK/documentation/CanvasSDK/CanvasSigningHandler":{"role":"symbol","title":"CanvasSigningHandler","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"CanvasSigningHandler"}],"abstract":[],"identifier":"doc:\/\/com.occipital.CanvasSDK\/documentation\/CanvasSDK\/CanvasSigningHandler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CanvasSigningHandler"}],"url":"\/documentation\/canvassdk\/canvassigninghandler"},"doc://com.occipital.CanvasSDK/documentation/CanvasSDK/CanvasSigningAlgo":{"role":"symbol","title":"CanvasSigningAlgo","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"CanvasSigningAlgo"}],"abstract":[],"identifier":"doc:\/\/com.occipital.CanvasSDK\/documentation\/CanvasSDK\/CanvasSigningAlgo","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CanvasSigningAlgo"}],"url":"\/documentation\/canvassdk\/canvassigningalgo"},"doc://com.occipital.CanvasSDK/documentation/CanvasSDK":{"role":"collection","title":"CanvasSDK","abstract":[{"type":"text","text":"Create a 3D scan of your environment using a device’s camera and convert it to a CAD model."}],"identifier":"doc:\/\/com.occipital.CanvasSDK\/documentation\/CanvasSDK","kind":"symbol","type":"topic","url":"\/documentation\/canvassdk"},"doc://com.occipital.CanvasSDK/documentation/CanvasSDK/Canvas":{"role":"symbol","title":"Canvas","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Canvas"}],"abstract":[{"type":"text","text":"All operations with canvas service is done by Canvas shared instance "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.occipital.CanvasSDK\/documentation\/CanvasSDK\/Canvas\/shared"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"For proper operation of Canvas SDK you should setup credentials and attach signing handler callback, as described in “Getting Started” section of documentation."}],"identifier":"doc:\/\/com.occipital.CanvasSDK\/documentation\/CanvasSDK\/Canvas","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Canvas"}],"url":"\/documentation\/canvassdk\/canvas"},"https://git-lfs.github.com":{"title":"git lfs docs","titleInlineContent":[{"type":"text","text":"git lfs docs"}],"type":"link","identifier":"https:\/\/git-lfs.github.com","url":"https:\/\/git-lfs.github.com"}}}